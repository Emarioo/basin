
// Declare libraries and how to refer to them
#library "Kernel" as Kernel
#library MyGraphicsLibrary

// Use @import annotation to set current library

# { compiler_external_library("Kernel") }
fn read_file(path: char*, data: void*, len: i32) -> i32;

@import(MyGraphicsLibrary)
fn RenderQuad(rect: Vector4, color: Vector4);


fn MyFunction() {
    // Some extra external functions only visible in this function

    @import(Kernel)
    fn CreateFile(/* arguments */);
    fn CloseHandle(/* arguments */);

    CreateFile()
}

// @import is scoped so the @import(Kernel) in MyFunction didn't change the current import library in the top scope

// Still using MyGraphicsLibrary, no need for @import
fn InitGraphics();

// Maybe we should have it to be clear that this function is external
// Otherwise it looks like a forward declaration of a function only visible in this translation unit
@import
fn InitGraphics();
